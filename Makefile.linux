.DEFAULT_GOAL := linux_local_producer

export DATE := $(shell date +%Y%m%d-%H:%M:%S)
export LATEST_COMMIT := $(shell git log --pretty=format:'%h' -n 1)
export BRANCH := $(shell git branch |grep -v "no branch"| grep \*|cut -d ' ' -f2)
export BUILT_ON_IP := $(shell [ $$(uname) = Linux ] && hostname -i || hostname )
export RUNTIME_VER := $(shell go version)
export BUILT_ON_OS=$(shell uname -a)
ifeq ($(BRANCH),)
BRANCH := master
endif

export COMMIT_CNT := $(shell git rev-list HEAD | wc -l | sed 's/ //g' )
export BUILD_NUMBER := ${BRANCH}-${COMMIT_CNT}
export COMPILE_LDFLAGS='-s -w \
                          -X "main.BuildDate=${DATE}" \
                          -X "main.LatestCommit=${LATEST_COMMIT}" \
                          -X "main.BuildNumber=${BUILD_NUMBER}" \
                          -X "main.BuiltOnIP=${BUILT_ON_IP}" \
                          -X "main.BuiltOnOs=${BUILT_ON_OS}" \
                          -X "main.Branch=${BRANCH}" \
                          -X "main.CommitCnt=${COMMIT_CNT}" \
                          -X "main.RuntimeVer=${RUNTIME_VER}" '


PACKAGES=`go list ./... | grep -v vendor | grep -v mocks`

fmt:
	for pkg in ${PACKAGES}; do \
		go fmt $$pkg; \
	done;

docker_builder:
	docker build --target builder -t starwiz_ai_image:build -f ./build/docker/Dockerfile.build .

docker_producer:
	docker build -t starwiz_ai_image:prod -f ./build/docker/Dockerfile.build .

windows_local_producer:windows_local_builder
	docker build -t starwiz_ai_image:local_prod -f ./build/docker/Dockerfile.local .

linux_local_producer:linux_local_builder
	docker build -t starwiz_ai_image:local_prod -f ./build/docker/Dockerfile.local .

macos_local_producer:macos_local_builder
	docker build -t starwiz_ai_image:local_prod -f ./build/docker/Dockerfile.local .

windows_local_builder:
	$(info "start build...")
  env CGO_ENABLED=0 GOOS=windows GOARCH=amd64\
	&& go build -ldflags=${COMPILE_LDFLAGS} -o build/bin/starwiz_ai_service.exe

linux_local_builder:
	$(info "start build...")
	env CGO_ENABLED=0 GOOS=linux GOARCH=amd64\
	&& go build -ldflags=${COMPILE_LDFLAGS} -o build/bin/starwiz_ai_service

macos_local_builder:
	env CGO_ENABLED=0 GOOS=darwin GOARCH=amd64\
	&& go build -ldflags=${COMPILE_LDFLAGS} -o build/bin/starwiz_ai_service

test:
	docker run -d --name test_starwiz_ai -v /d/Work/Golang/run/aigo/.env:/app/.env -p 8088:8088  starwiz_ai_image:prod

clean_test:
	docker stop test_starwiz_ai
	docker container rm test_starwiz_ai
	docker rmi starwiz_ai_image:local_prod
	docker rmi starwiz_ai_image:prod

clean_bin:
	rm -rf ./build/bin/*

clean_docker_cache:
	docker builder prune

clean:clean_test clean_bin clean_docker_cache
