version: "3.9"

services:
  app:
    image: starwiz_ai_go:local_prod
    container_name: rj_starwiz_ai_go_server
    restart: always
    depends_on:
      - db
      - redis
    network_mode: bridge
    volumes:
      - "../../.env:/app/.env"
      - "../../runing/storage:/app/storage"
      - "../../runing/storage/logs:/app/storage/logs"
      - "/mnt/nas246/public/DataWiz/ais:/app/mnt/ais"
    ports:
      - "8088:8088"
# appplus:
#   build: .
#   image: my_django_app:latest
#   container_name: rj_starwiz_ai_django_server
#   command: gunicorn starwizAi.wsgi:application --bind 0.0.0.0:5177
#   ports:
#     - "5177:5177"
#   volumes:
#     - .:/app
#   env_file:
#     - .env
#   depends_on:
#     - db
#     - redis
#   restart: always
  db:
    image: postgres
    container_name: rj_starwiz_ai_db
    restart: always
    network_mode: bridge
    ports:
      - "54327:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=aidb
      - TZ=Asia/Shanghai
      - PGTZ=Asia/Shanghai
      - ALLOW_IP_RANGE=0.0.0.0/0
    volumes:
      - "../../runing/db/data:/var/lib/postgresql/data"
      - ../../runing/db/init.sql:/docker-entrypoint-initdb.d/init.sql
# db:
#   image: postgis/postgis
#   container_name: rj_starwiz_ai_db
#   restart: always
#   network_mode: bridge
#   healthcheck:
#     test: "exit 0"
#   ports:
#     - "54327:5432"
#   environment:
#     - POSTGRES_USER=postgres
#     - POSTGRES_PASSWORD=123456
#     - POSTGRES_DB=aidb
#     - TZ=Asia/Shanghai
#     - PGTZ=Asia/Shanghai
#     - ALLOW_IP_RANGE=0.0.0.0/0
#   volumes:
#     - "../../runing/db/data:/var/lib/postgresql/data"
#     - "../../runing/db/create_plugin.sh:/docker-entrypoint-initdb.d/create_plugin.sh"
  redis:
      image: redis:7-alpine
      container_name: rj_starwiz_ai_redis
      network_mode: bridge
      restart: always
      ports:
        - "56379:6379"
      command: [ "redis-server", "/etc/redis.conf", "--appendonly", "yes" ]
      volumes:
        - ../../runing/redis/data:/data
        - ../../runing/redis/redis.conf:/etc/redis.conf
      healthcheck:
        test: "redis-cli -h 127.0.0.1 -p 6379 info Replication"
        interval: 10s
        timeout: 5s
        retries: 3
        start_period: 10s
# nginx:
#   image: nginx:alpine
#   container_name: nginx_proxy
#   volumes:
#     - ./nginx.conf:/etc/nginx/conf.d/default.conf
#     - ./staticfiles:/app/staticfiles
#     - ./media:/app/media
#   ports:
#     - "80:80"
#   depends_on:
#     - web
#   restart: always

# volumes:
#   static-volume:
